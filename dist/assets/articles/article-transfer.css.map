{"version":3,"sources":["content/articles/article-transfer/article-transfer.css","templates/library.blocks/bootstrap/mixins/_breakpoints.scss","content/articles/article-transfer/article-transfer.scss"],"names":[],"mappings":"AAAA,iB,ACyEI,4BCtEF,6C,CAEI,iB,CAFJ,oD,CAIM,a,CACA,e,CAIN,2F,CAIQ,e,CAJR,2F,CAOQ,6B,CAPR,2F,CAUQ,iB,CAKR,2F,CAIQ,qB,CAJR,2F,CAOQ,a,CAPR,2F,CAUQ,iB,CAKR,2F,CAIQ,e,CAJR,2F,CAOQ,6B,CAPR,2F,CAUQ,mB","file":"article-transfer.css","sourcesContent":["@charset \"UTF-8\";\n@media (max-width: 767.98px) {\n  .article-transfer__transfer-table tbody > tr > td {\n    text-align: center; }\n    .article-transfer__transfer-table tbody > tr > td:before {\n      display: block;\n      font-weight: bold; }\n  .article-cleaning_lang_ru .article-transfer__transfer-table tbody > tr > td:nth-child(1):before {\n    content: \"Город\"; }\n  .article-cleaning_lang_ru .article-transfer__transfer-table tbody > tr > td:nth-child(2):before {\n    content: \"Легковой автомобиль\"; }\n  .article-cleaning_lang_ru .article-transfer__transfer-table tbody > tr > td:nth-child(3):before {\n    content: \"Минивэн\"; }\n  .article-cleaning_lang_en .article-transfer__transfer-table tbody > tr > td:nth-child(1):before {\n    content: \"Destination\"; }\n  .article-cleaning_lang_en .article-transfer__transfer-table tbody > tr > td:nth-child(2):before {\n    content: \"Car\"; }\n  .article-cleaning_lang_en .article-transfer__transfer-table tbody > tr > td:nth-child(3):before {\n    content: \"Minivan\"; }\n  .article-cleaning_lang_ua .article-transfer__transfer-table tbody > tr > td:nth-child(1):before {\n    content: \"Місто\"; }\n  .article-cleaning_lang_ua .article-transfer__transfer-table tbody > tr > td:nth-child(2):before {\n    content: \"Легковий автомобіль\"; }\n  .article-cleaning_lang_ua .article-transfer__transfer-table tbody > tr > td:nth-child(3):before {\n    content: \"Мінівен\"; } }\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02px, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n","@import \"../../../templates/library.blocks/bootstrap/bootstrap-reboot\";\r\n\r\n@include media-breakpoint-down(sm) {\r\n  .article-transfer__transfer-table {\r\n    tbody>tr>td {\r\n      text-align: center;\r\n      &:before {\r\n        display: block;\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n  .article-cleaning_lang_ru {\r\n    .article-transfer__transfer-table {\r\n      tbody>tr>td {\r\n        &:nth-child(1):before {\r\n          content: \"Город\";\r\n        }\r\n        &:nth-child(2):before {\r\n          content: \"Легковой автомобиль\";\r\n        }\r\n        &:nth-child(3):before {\r\n          content: \"Минивэн\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .article-cleaning_lang_en {\r\n    .article-transfer__transfer-table {\r\n      tbody>tr>td {\r\n        &:nth-child(1):before {\r\n          content: \"Destination\";\r\n        }\r\n        &:nth-child(2):before {\r\n          content: \"Car\";\r\n        }\r\n        &:nth-child(3):before {\r\n          content: \"Minivan\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .article-cleaning_lang_ua {\r\n    .article-transfer__transfer-table {\r\n      tbody>tr>td {\r\n        &:nth-child(1):before {\r\n          content: \"Місто\";\r\n        }\r\n        &:nth-child(2):before {\r\n          content: \"Легковий автомобіль\";\r\n        }\r\n        &:nth-child(3):before {\r\n          content: \"Мінівен\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"]}