jQuery(document).ready(function ($) {
    $('.table-adaptive').each(function (tableIndex, tableElement) {
        $(tableElement).find('>thead>tr>th').each(function (columnIndex, columnElement) {
            var $columnElement = $(columnElement), columnName = $columnElement.text();
            $columnElement.closest('table').find('tbody>tr').each(function (rowIndex, rowElement) {
                $(rowElement).find('>td:eq(' + columnIndex + ')').attr('data-column-name', columnName);
            });
        });
    });
});
jQuery(document).ready(function ($) {
    $('[data-toggle=tooltip]').tooltip({
        delay: {
            show: 240,
            hide: 120
        }
    });
    $('[data-toggle=popover]').popover();
    $('[data-plugin=int-tel-input]').intlTelInput({
        initialCountry: 'bg',
        preferredCountries: ['bg', 'ru'],
        separateDialCode: true
    });
    $('input[daterangepicker]').daterangepicker({
        locale: {
            format: 'DD.MM.YYYY'
        }
    });
    setTimeout(function () {
        $('.page-preloader').fadeOut(700);
    }, 1);
});
// let app = new Vue({
//     el: '#app',
//     methods: {
//         getLocalStorageItem: function(keyName) {
//             return JSON.parse(localStorage.getItem(keyName));
//         },
//         setLocalStorageItem: function(keyName, value) {
//             localStorage.setItem(keyName, JSON.stringify(value));
//         },
//         addToFavorites: function(offerId) {
//             let favorites = this.getLocalStorageItem('favorites');
//             favorites = Array.isArray(favorites) ? favorites : [];
//             favorites.push(offerId);
//             this.setLocalStorageItem('favorites', favorites);
//         },
//         removeFromFavorites: function(offerId) {
//             let favorites = this.getLocalStorageItem('favorites');
//             favorites = Array.isArray(favorites) ? favorites : [];
//
//             let indexOfRemovedElement = favorites.indexOf(offerId);
//             favorites.splice(indexOfRemovedElement, 1);
//
//             this.setLocalStorageItem('favorites', favorites);
//         },
//         toggleFavorites: function(offerId) {
//             this.addToFavorites(offerId);
//         }
//     }
// });
jQuery(document).ready(function ($) {
    var blockElement = $('.cities-tabs');
    if (!blockElement.length)
        return false;
    function setCitiesLetters(contentElement) {
        var usedLetters = [];
        contentElement.find('[data-name]').each(function (index, element) {
            var $element = $(element), cityName = $element.data('name'), cityNameFirstLetter = cityName.substring(0, 1).toUpperCase(), usedLettersHasCurrentLetter = usedLetters.indexOf(cityNameFirstLetter) > -1;
            if (usedLettersHasCurrentLetter)
                return true;
            usedLetters.push(cityNameFirstLetter);
            $element.attr('data-letter', cityNameFirstLetter);
        });
    }
    blockElement.find('.tab-pane').each(function (index, element) {
        setCitiesLetters($(element));
    });
});
jQuery(document).ready(function ($) {
    var blockElement = $('.list-of-offers');
    if (!blockElement.length)
        return false;
    if (window.outerWidth < 560) {
        $('.list-of-offers[data-slick-adaptive]').slick({
            centerMode: true,
            centerPadding: '16px',
            arrows: false,
            dots: false
        });
    }
});
jQuery(document).ready(function ($) {
    var blockElement = $('.offer-image-slider');
    blockElement.find('[is-slider]').slick({
        slidesToShow: 1,
        slidesToScroll: 1,
        arrows: true,
        asNavFor: '.offer-image-slider [is-slider-nav]'
    });
    blockElement.find('[is-slider-nav]').slick({
        slidesToShow: 10,
        slidesToScroll: 1,
        asNavFor: '.offer-image-slider [is-slider]',
        dots: false,
        arrows: false,
        focusOnSelect: true,
        responsive: [
            {
                breakpoint: 1300,
                settings: {
                    slidesToShow: 7
                }
            },
            {
                breakpoint: 992,
                settings: {
                    slidesToShow: 5
                }
            },
            {
                breakpoint: 768,
                settings: {
                    slidesToShow: 4
                }
            },
            {
                breakpoint: 480,
                settings: {
                    slidesToShow: 2
                }
            }
        ]
    });
});
jQuery(document).ready(function ($) {
    var blockElement = $('.offer-item');
    if (!blockElement.length)
        return false;
    blockElement
        .find('.offer-item__toggle-favorites[data-toggle="button"]')
        .on('click', function () {
        $(this).toggleClass('active');
    });
});
jQuery(document).ready(function ($) {
    var blockElement = $('.offer-item-carousel');
    if (!blockElement.length)
        return false;
    blockElement.find('.offer-item-carousel__arrow').on('click', function () {
        var arrowElement = $(this), sliderElement = arrowElement.closest('.offer-item-carousel'), slickSliderElement = sliderElement.find('.offer-item-carousel__images-list[data-slick-carousel]');
        slickSliderElement.slick({
            lazyLoad: 'ondemand',
            infinite: true,
            dots: false,
            swipe: false
        });
        slickSliderElement.find('[data-lazy]').each(function () {
            var slideElement = $(this), imageSource = slideElement.attr('data-lazy');
            slideElement.css('background-image', 'url(' + imageSource + ')');
        });
        slickSliderElement.remove('.offer-item-carousel__arrow');
        if (arrowElement.hasClass('offer-item-carousel__arrow_slide_prev')) {
            slickSliderElement.slick('slickPrev');
        }
        else {
            slickSliderElement.slick('slickNext');
        }
    });
});
var MetrikaGoals = function () {
    var goals = {
        0: 'reservation_prepay_clk',
        1: 'reservation_prepay_sel',
        2: 'reservation_trust_clk',
        3: 'reservation_trust_hover',
        4: 'reservation_warn_link_clk',
        5: 'reservation_complete_clk',
        6: 'reservation_smo_clk',
        7: 'reservation_manual_profile_clk',
        8: 'objects_list_view',
        9: 'conv_prep_clk',
        10: 'conv_prep_sel',
        11: 'conv_trust_clk',
        12: 'conv_trust_hover',
        13: 'conv_warn_link_clk',
        14: 'conv_complete_btn_clk',
        15: 'conv_smo_btn_clk',
        16: 'conv_profile_manual_clk',
        17: 'filter_sveti_vlas',
        18: 'filter_sunny_beach',
        19: 'filter_sozopol',
        20: 'filter_nesebr',
        21: 'filter_varna',
        22: 'filter_golden_sands',
        23: 'filter_biala',
        24: 'filter_pomorie',
        25: 'land_top_destination',
        26: 'land_mov_how_it_works',
        27: 'land_how_to_get',
        28: 'land_attractions',
        29: 'search_2guests',
        30: 'search_3guests',
        31: 'search_4guests',
        32: 'search_5guests',
        33: 'search_date_june',
        34: 'search_date_july',
        35: 'search_date_aug',
        36: 'search_date_sept',
        37: 'booking_paid',
        38: 'search_6guests',
        39: 'search_m6_guests',
        40: 'authorization',
        41: 'registration',
        42: 'auth_page_visit',
        43: 'reviews_login_action',
        44: 'reviews_publish_action',
        45: 'calendar_actuality_action',
        46: 'no_occupied_click'
    };
    var counterNm = {};
    this.reachGoal = function (goalName) {
        if (goalExist(goalName)) {
            var goalIdentifier = goals[goalName];
            if (typeof yaCounter25232657 !== 'undefined') {
                counterNm = yaCounter25232657;
                counterNm.reachGoal(goalIdentifier);
            }
            if (typeof ga !== 'undefined') {
                ga('send', 'event', 'General', goalIdentifier);
            }
        }
    };
    var goalExist = function (goalName) {
        if (typeof goals[goalName] === 'undefined') {
            return false;
        }
        else {
            return true;
        }
    };
    function dump(obj) {
        var out = '';
        for (var i in obj) {
            out += i + ": " + obj[i] + "\n";
        }
        alert(out);
    }
};
jQuery(document).ready(function ($) {
    var blockElement = $('.reviews-slider');
    blockElement.slick();
});
jQuery(document).ready(function ($) {
    var blockElement = $('.authorization'), cardFront = blockElement.find('.authorization__card-front');
    cardFront.on('click', function () {
        cardFront.toggleClass('d-none');
    });
});
jQuery(document).ready(function ($) {
    var blockElement = $('.photos-of-the-complex');
    blockElement.find('.photos-of-the-complex__slider[is-slick-carousel]').slick();
});
jQuery(document).ready(function ($) {
    var blockElement = $('.who-we-are');
    blockElement.find('.popular-cities__link').on('click', function (e) {
        e.preventDefault();
        var data = $(this).data();
        blockElement.find('.form-search-offers__cities-tabs-toggle').val(data.name);
        blockElement.find('.form-search-offers__cities-dropdown').collapse('hide');
        blockElement.find('[name="filters[cityId]"]').val(data.id);
    });
});
jQuery(document).ready(function ($) {
    var blockElement = $('.form-car-rental');
    blockElement.on('submit', function (e) {
        e.preventDefault();
        var isValidForm = blockElement[0].checkValidity();
        function hideAlerts() {
            setTimeout(function () {
                blockElement.find('.form-car-rental__alert').fadeOut();
            }, 5000);
        }
        if (isValidForm) {
            $.ajax({
                url: blockElement.attr('action'),
                method: blockElement.attr('method'),
                data: blockElement.serialize()
            })
                .done(function () {
                blockElement[0].reset();
                blockElement.find('.form-car-rental__alert_is_success')
                    .removeClass('d-none')
                    .css('display', 'none')
                    .fadeIn();
                hideAlerts();
            })
                .fail(function () {
                blockElement.find('.form-car-rental__alert_is_danger')
                    .removeClass('d-none')
                    .css('display', 'none')
                    .fadeIn();
                hideAlerts();
            });
        }
    });
});
jQuery(document).ready(function ($) {
    var blockElements = $('.form-edit-transfer');
    if (!blockElements.length)
        return false;
    blockElements.each(function (index, blockElement) {
        var $blockElement = $(blockElement), buttonEditElement = $blockElement.find('.form-edit-transfer__button-edit'), buttonDetailsElement = $blockElement.find('.form-edit-transfer__button-details'), buttonSaveElement = $blockElement.find('.form-edit-transfer__button-save'), buttonCancelElement = $blockElement.find('.form-edit-transfer__button-cancel');
        // Toggle edit State
        function toggleFormEditSatate(e) {
            e.preventDefault();
            $blockElement.toggleClass('form-edit-transfer_state_edit');
            var hasStateEdit = $blockElement.hasClass('form-edit-transfer_state_edit');
            $blockElement
                .find('input, select, textarea')
                .prop('disabled', !hasStateEdit);
            $blockElement
                .find('.form-edit-transfer__note-collapse')
                .collapse(hasStateEdit ? 'show' : 'hide');
        }
        // Toggle Details
        function toggleFormDetails(e) {
            e.preventDefault();
            $blockElement
                .find('.form-edit-transfer__note-collapse')
                .collapse('toggle');
        }
        buttonCancelElement.on('click', toggleFormEditSatate);
        buttonEditElement.on('click', toggleFormEditSatate);
        buttonSaveElement.on('click', toggleFormEditSatate);
        buttonDetailsElement.on('click', toggleFormDetails);
    });
});
jQuery(document).ready(function ($) {
    var blockElement = $('.form-feedback');
    blockElement.on('submit', function (e) {
        e.preventDefault();
        var isValidForm = blockElement[0].checkValidity();
        function hideAlerts() {
            setTimeout(function () {
                blockElement.find('.form-feedback__alert').fadeOut();
            }, 5000);
        }
        if (isValidForm) {
            $.ajax({
                url: blockElement.attr('action'),
                method: blockElement.attr('method'),
                data: blockElement.serialize()
            })
                .done(function () {
                blockElement[0].reset();
                blockElement.find('.form-feedback__alert_is_success')
                    .removeClass('d-none')
                    .css('display', 'none')
                    .fadeIn();
                hideAlerts();
            })
                .fail(function () {
                blockElement.find('.form-feedback__alert_is_danger')
                    .removeClass('d-none')
                    .css('display', 'none')
                    .fadeIn();
                hideAlerts();
            });
        }
    });
});
jQuery(document).ready(function ($) {
    var blockElement = $('.form-renting');
    if (!blockElement.length)
        return false;
    console.log(111);
    blockElement.find('[data-target*="accordion-item_number_7"]').on('click', function () {
        var collapseElement = $(this), collapseContentSelector = collapseElement.data('target'), collapseContentElement = $(collapseContentSelector);
        collapseContentElement.on('shown.bs.collapse', function () {
            $([document.documentElement, document.body]).animate({
                scrollTop: collapseElement.offset().top - 10
            }, 300);
        });
    });
});
document.addEventListener('DOMContentLoaded', function () {
    var blockElement = $('.form-search-offers');
    if (blockElement.length == 0)
        return false;
    var changeCitiesTabsComponent = function () {
        var blockElement = $('.form-search-offers'), toggleElement = blockElement.find('[data-target=".form-search-offers__cities-tabs"]'), citiesTabsElement = blockElement.find('.form-search-offers__cities-tabs');
        if (window.outerWidth > 992) {
            toggleElement
                .attr('data-toggle', 'collapse');
            citiesTabsElement
                .removeAttr('style')
                .removeClass('modal');
            $('.modal-backdrop').remove();
            $('.modal-open').removeClass('modal-open');
        }
        else {
            toggleElement
                .attr('data-toggle', 'modal');
            citiesTabsElement
                .addClass('modal');
        }
    };
    changeCitiesTabsComponent();
    window.addEventListener('resize', changeCitiesTabsComponent);
    blockElement.find('.cities-tabs__link').on('click', function (e) {
        e.preventDefault();
        var data = $(this).data(), toggleCollapseElement = blockElement.find('[data-target=".form-search-offers__cities-tabs"]');
        toggleCollapseElement.val(data.name);
        blockElement.find('[name="filters[cityId]"]').val(data.id);
        toggleCollapseElement.trigger('click');
    });
    blockElement
        .find('.form-search-offers__list-of-cities-toggle')
        .on('click', function () {
        var cityNameInputElement = $(this), cityIdInputElement = blockElement.find('[name="filters[cityId]"]'), listOfCitiesElement = blockElement.find('.list-of-cities');
        listOfCitiesElement.toggleClass('d-none');
        listOfCitiesElement.find('.list-of-cities__nav > .nav-link').on('click', function (e) {
            console.log('Clicked on city');
            e.preventDefault();
            var that = $(this);
            cityNameInputElement.val(that.data('name'));
            cityIdInputElement.val(that.data('id'));
        });
    });
    var sliderElement = blockElement.find('.form-search-offers__slider').get(0), minPriceElement = blockElement.find('[name="filters[prices][minPrice]"]').get(0), maxPriceElement = blockElement.find('[name="filters[prices][maxPrice]"]').get(0), inputs = [minPriceElement, maxPriceElement], minPrice = sliderElement.dataset.min ? sliderElement.dataset.min * 1 : 0, maxPrice = sliderElement.dataset.max ? sliderElement.dataset.max * 1 : 1000;
    noUiSlider.create(sliderElement, {
        start: [minPrice, maxPrice],
        connect: true,
        tooltips: true,
        range: {
            'min': minPrice,
            'max': maxPrice
        },
        format: wNumb({
            decimals: 0,
            prefix: '€'
        })
    });
    sliderElement.noUiSlider.on('update', function (values, handle) {
        inputs[handle].value = values[handle];
    });
}, false);

//# sourceMappingURL=ts.bundle.min.js.map
