{"version":3,"sources":["templates/pages/site/page-offer/page-offer.scss","templates/pages/site/page-offer/page-offer.css","templates/library.blocks/bootstrap/mixins/_breakpoints.scss"],"names":[],"mappings":"AAEA,uB,CCDA,uB,CDGE,gB,CACA,e,CAGF,kB,CACE,a,CAEF,uC,CAEI,Y,CAGJ,yB,CACE,e,CAGF,yB,CACE,Y,CACA,kB,CACA,sB,CACA,c,CACA,U,CACA,W,CACA,Y,CACA,U,CACA,W,CACA,iB,CACA,8B,CAEF,sC,CACE,Y,CEuCE,6BFnCF,kB,CACE,qB,CACA,c,CACA,iB,AEmBA,0BDrBF,kB,CADA,yB,CDUE,iB,CACA,uB,CACA,mB,CACA,mC,CAAA,2B,CAEF,kB,CACE,kB,CACA,qB,CAEF,yB,CACE,c,AEeA,4BFVF,uB,CAEI,Y,CAIJ,uB,CAEI,qB,AEEF,4BFGF,yB,CAEI,S,CACA,wB,CAHJ,gC,CAMI,0B","file":"page-offer.css","sourcesContent":["@import \"../../../library.blocks/bootstrap/bootstrap-reboot\";\r\n\r\n.page-offer__article h2,\r\n.page-offer__complex h2 {\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.page-offer__place {\r\n  color: $text-muted;\r\n}\r\n.page-offer__how-it-works {\r\n  .how-it-works {\r\n    height: 260px;\r\n  }\r\n}\r\n.page-offer__modal-dialog {\r\n  max-width: 375px;\r\n}\r\n\r\n.page-offer__modal-toggle {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: fixed;\r\n  right: 20px;\r\n  bottom: 20px;\r\n  z-index: 1051;\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 50%;\r\n  transition: $transition-base;\r\n}\r\n.page-offer__aside-toggle-caption-hide {\r\n  display: none;\r\n}\r\n\r\n@include media-breakpoint-down(lg) {\r\n  .page-offer__aside {\r\n    background-color: $white;\r\n    padding: $card-spacer-y;\r\n    border-radius: 0;\r\n  }\r\n}\r\n@include media-breakpoint-up(xl) {\r\n  .page-offer__modal,\r\n  .page-offer__modal-dialog,\r\n  .page-offer__modal {\r\n    position: relative;\r\n    display: block!important;\r\n    opacity: 1!important;\r\n    transform: initial!important;\r\n  }\r\n  .page-offer__aside {\r\n    padding-top: 1.5rem;\r\n    padding-bottom: 1.5rem;\r\n  }\r\n  .page-offer__modal-toggle {\r\n    display: none;\r\n  }\r\n}\r\n\r\n@include media-breakpoint-down(sm) {\r\n  .page-offer {\r\n    .breadcrumb {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .page-offer__article {\r\n    h2 {\r\n      font-size: $h4-font-size * .875;\r\n    }\r\n  }\r\n}\r\n@include media-breakpoint-down(xs) {\r\n  .page-offer {\r\n    .form-booking {\r\n      padding: 0;\r\n      background-color: initial;\r\n    }\r\n    .form-booking__table {\r\n      background-color: $light;\r\n    }\r\n  }\r\n}",".page-offer__article h2,\n.page-offer__complex h2 {\n  font-size: 1.5rem;\n  font-weight: 600; }\n\n.page-offer__place {\n  color: #616161; }\n\n.page-offer__how-it-works .how-it-works {\n  height: 260px; }\n\n.page-offer__modal-dialog {\n  max-width: 375px; }\n\n.page-offer__modal-toggle {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  right: 20px;\n  bottom: 20px;\n  z-index: 1051;\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  transition: all 0.2s ease-in-out; }\n\n.page-offer__aside-toggle-caption-hide {\n  display: none; }\n\n@media (max-width: 1299.98px) {\n  .page-offer__aside {\n    background-color: #fff;\n    padding: 0.75rem;\n    border-radius: 0; } }\n\n@media (min-width: 1300px) {\n  .page-offer__modal,\n  .page-offer__modal-dialog,\n  .page-offer__modal {\n    position: relative;\n    display: block !important;\n    opacity: 1 !important;\n    -webkit-transform: initial !important;\n            transform: initial !important; }\n  .page-offer__aside {\n    padding-top: 1.5rem;\n    padding-bottom: 1.5rem; }\n  .page-offer__modal-toggle {\n    display: none; } }\n\n@media (max-width: 767.98px) {\n  .page-offer .breadcrumb {\n    display: none; }\n  .page-offer__article h2 {\n    font-size: 1.3125rem; } }\n\n@media (max-width: 575.98px) {\n  .page-offer .form-booking {\n    padding: 0;\n    background-color: initial; }\n  .page-offer .form-booking__table {\n    background-color: #F5F5F5; } }\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02px, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n"]}