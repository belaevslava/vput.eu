@import "../../library.blocks/bootstrap/bootstrap-reboot";

$bubble-d: 4.5rem;
$bubble-r: .5*$bubble-d;
$particle-d: .375rem;
$particle-r: .5*$particle-d;

$pi: 3.14159265359;
$_precision: 10;

@function pow($base, $exp) {
  $value: $base;
  @if $exp > 1 {
    @for $i from 2 through $exp {
      $value: $value * $base;
    }
  }
  @if $exp < 1{
    @for $i from 0 through -$exp {
      $value: $value / $base;
    }
  }
  @return $value;
}

@function fact($num) {
  $fact: 1;
  @if $num > 0{
    @for $i from 1 through $num {
      $fact: $fact * $i;
    }
  }
  @return $fact;
}

@function _to_unitless_rad($angle) {
  @if unit($angle) == "deg" {
    $angle: $angle / 180deg * $pi;
  }
  @if unit($angle) == "rad" {
    $angle: $angle / 1rad;
  }
  @return $angle;
}

@function sin($angle){
  $a: _to_unitless_rad($angle);
  $sin: $a;
  @for $n from 1 through $_precision {
    $sin: $sin + (pow(-1, $n) / fact(2 * $n + 1) ) * pow($a, (2 * $n + 1));
  }
  @return $sin;
}

@function cos($angle){
  $a: _to_unitless_rad($angle);
  $cos: 1;
  @for $n from 1 through $_precision {
    $cos: $cos + ( pow(-1,$n) / fact(2*$n) ) * pow($a,2*$n);
  }
  @return $cos;
}

@mixin particles($k) {
  $shadow-list: ();
  $n-groups: 7;
  $group-base-angle: 360deg/$n-groups;
  $group-distr-r: (1 + $k*.25)*$bubble-r;
  $n-particles: 2;
  $particle-base-angle: 360deg/$n-particles;
  $particle-off-angle: 60deg; // offset angle from radius
  $spread-r: -$k*1.1*$particle-r;

  @for $i from 0 to $n-groups {
    $group-curr-angle: $i*$group-base-angle - 90deg;
    $xg: $group-distr-r*cos($group-curr-angle);
    $yg: $group-distr-r*sin($group-curr-angle);

    @for $j from 0 to $n-particles {
      $particle-curr-angle: $group-curr-angle +
				$particle-off-angle + $j*$particle-base-angle;
      $xs: $xg + $particle-d*cos($particle-curr-angle);
      $ys: $yg + $particle-d*sin($particle-curr-angle);

      $shadow-list: $shadow-list, $xs $ys 0 $spread-r
      #fff;
    }
  }

  box-shadow: $shadow-list;
}

@mixin bubble($ext) {
  transform: scale(1);
  border-color: rgba(255,255,255, .8);
  border-width: $ext;
}

.animated-heart {
  &:before, &:after {
    position: absolute;
    z-index: -1;
    top: 50%; left: 50%;
    border-radius: 50%;
    content: '';
  }

  &:before {
    box-sizing: border-box;
    margin: -$bubble-r;
    border: solid $bubble-r #fff;
    width: $bubble-d;
    height: $bubble-d;
    transform: scale(0);
  }

  &:after {
    margin: -$particle-r;
    width: $particle-d;
    height: $particle-d;
    @include particles(1);
  }

  &.active {
    opacity: 1;
    animation: heart 1.2s cubic-bezier(.17, .89, .32, 1.49);

    &:before, &:after {
      animation: inherit;
      animation-timing-function: ease-out;
    }

    &:before {
      will-change: transform, border-width, border-color;
      animation-name: bubble;
    }

    &:after {
      will-change: opacity, box-shadow;
      animation-name: particles;
    }
  }
}

@keyframes heart {
  0%, 17.5% { font-size: 0; }
}

@keyframes bubble {
  15% { @include bubble($bubble-r); }
  30%, 100% { @include bubble(0); }
}

@keyframes particles {
  0%, 20% { opacity: 0; }
  25% {
    opacity: 1;
    @include particles(0);
  }
}